{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","hasPressedKey","pressedKey","handleDocumentPressKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAQ,CACNC,eAAe,EACfC,WAAY,IAHhB,EAcEC,uBAAyB,SAACC,GACxB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,IAAKL,eAAe,KAf1D,uDAME,WACEM,SAASC,iBAAiB,QAASC,KAAKN,0BAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,0BAX/C,oBAkBE,WACE,MAGIM,KAAKT,MAFPE,EADF,EACEA,WACAD,EAFF,EAEEA,cAGF,OACE,qBAAKU,UAAU,MAAf,SAEGV,EACC,mBAAGU,UAAU,eAAb,4CAC+BT,EAD/B,OAIA,mBAAGS,UAAU,eAAb,2CAhCV,GAAyBC,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.6cccf4a8.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  hasPressedKey: boolean,\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasPressedKey: false,\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentPressKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentPressKey);\n  }\n\n  handleDocumentPressKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key, hasPressedKey: true });\n  };\n\n  render() {\n    const {\n      pressedKey,\n      hasPressedKey,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        {hasPressedKey ? (\n          <p className=\"App__message\">\n            {`The last pressed key is [${pressedKey}]`}\n          </p>\n        ) : (\n          <p className=\"App__message\">\n            Nothing was pressed yet\n          </p>\n        )}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}